// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/externalsvc/external.go

// Package mock_externalsvc is a generated GoMock package.
package externalsvc

import (
	"reflect"

	"github.com/expandorg/verification/pkg/registrysvc"
	"github.com/expandorg/verification/pkg/verification"
	gomock "github.com/golang/mock/gomock"
)

// MockExternal is a mock of External interface
type MockExternal struct {
	ctrl     *gomock.Controller
	recorder *MockExternalMockRecorder
}

// MockExternalMockRecorder is the mock recorder for MockExternal
type MockExternalMockRecorder struct {
	mock *MockExternal
}

// NewMockExternal creates a new mock instance
func NewMockExternal(ctrl *gomock.Controller) *MockExternal {
	mock := &MockExternal{ctrl: ctrl}
	mock.recorder = &MockExternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExternal) EXPECT() *MockExternalMockRecorder {
	return m.recorder
}

// Verify mocks base method
func (m *MockExternal) Verify(reg *registrysvc.Registration, r verification.TaskResponse) (VerificationResults, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", reg, r)
	ret0, _ := ret[0].(VerificationResults)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify
func (mr *MockExternalMockRecorder) Verify(reg, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockExternal)(nil).Verify), reg, r)
}
